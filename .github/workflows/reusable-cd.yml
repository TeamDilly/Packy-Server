name: Reusable Deploy Workflow

permissions:
  contents: read
on:
  workflow_call:
    inputs:
      profile:
        type: string
        required: true
    secrets:
      ACTION_TOKEN:
        required: true
      AWS_ACCESS_KEY:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      SLACK_CHANNEL:
        required: true
      SLACK_WEBHOOK:
        required: true
jobs:
  CD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACTION_TOKEN }}
          submodules: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle & Upload Image to ECR
        run: ./gradlew -P${{ inputs.profile }} clean jib

      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDD_HH-mm-ss
          utcOffset: "+09:00"

      - name: Generate deployment package
        run: |
          mkdir -p deploy/.platform/nginx/conf.d
          cp Dockerrun.aws.${{ inputs.profile }}.json deploy/Dockerrun.aws.json
          cp -r .ebextensions-${{ inputs.profile }} deploy/.ebextensions
          cp .platform/nginx/conf.d/proxy-${{ inputs.profile }}.conf deploy/.platform/nginx/conf.d/proxy.conf
          cd deploy && zip -r deploy.zip .

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: packy-${{ inputs.profile }}-beanstalk
          environment_name: Packy-${{ inputs.profile }}-beanstalk-env
          version_label: packy-${{ inputs.profile }}-${{steps.current-time.outputs.formattedTime}}
          region: ${{ secrets.AWS_REGION }}
          deployment_package: deploy/deploy.zip
          wait_for_environment_recovery: 200
  SlackNotification:
    needs: CD
    if: ${{ needs.CD.result == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Set Slack profile based on branch
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "SLACK_PROFILE=운영계" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == "refs/heads/develop" ]]; then
            echo "SLACK_PROFILE=개발계" >> $GITHUB_ENV
          fi
      - name: Notify Message to Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_USERNAME: API 서버를 업데이트 했어요
          SLACK_ICON: https://i.pinimg.com/236x/86/ac/ae/86acaefa1fff543ad4b49ed39a2f38bc.jpg
          SLACK_TITLE: 🎁 ${{ env.SLACK_PROFILE }} 서버 변경 사항 🎁
          SLACK_MESSAGE: ${{ github.event.head_commit.message }}
